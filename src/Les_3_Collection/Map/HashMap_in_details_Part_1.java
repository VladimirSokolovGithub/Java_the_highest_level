package Les_3_Collection.Map;

public class HashMap_in_details_Part_1 {
    //В классе HashMap есть внутренний класс Node(Нода по русски или узел), который часто называют Entry, так как
    // он имплементирует интерфейс Entry

    //После создания нового HashMap например Map<Student, Double> map = new HashMap<>();, создаётся массив
    //размером 16 элементов - этот массив называется table. Каждый элемент этого массива может содержать несколько
    //наших пар key и value. Поэтому эти пары key и value объединяются в LinkedList. То есть каждый элемент массива
    //будет содержать LinkedList. Так же часто элементы такого массива называются basket - корзины.
    //При добавлении элемента если key = null, то элемент добавляется на нулевой индекс, если key не null то находится
    //hashCode() для key (ключа), после чего несложным алгоритмом находится индекс на который будет помещён данный
    //элемент. Допустим на 3-й индек массива добавляется наш объект Node. Первое поле Node - это hashCode, далее идёт
    //key и следом value и в конце next, означает есть ли ссылка на следующий элемент, если следующего элемента нет,
    //то null - так образуется первый элемент в LinkedList в данной 3-й ячейке массива. Допустим после добавления
    //следующего элемента hashCode разный, метод equals не проверяется, элемент снова попадает на 3-й индекс и
    //этот элемент(Node) будет добавлена в конец уже существующего в этой ячейке массива LinkedList и у первой
    //ноды(элемента) появится ссылка на следующую ноду (элемент) LinkedList. Допустим мы добавляем следующий
    //элемент и хеш код у него совпадает с хеш кодом первого элемента equals в ячейке с индексом 3. Если хеш
    //коды совпали далее идёт проверка с помощью метода equals и если элементы не равны, то происходит сравнение
    //со следующим элементом LinkedList в этой ячейке и если они не равны, то добавляется новая нода(элемент)
    //LinkedList в конец списка. Если добавляется элемент который равен по хеш коду и equals и совпадает
    // индекс с предыдущей ячейкой массива, то
    //происходит перезапись элемента в уже существующем в LinkedList элементе с таким же хэшкодом


    public static void main(String[] args) {

    }


}
